spring:
  application:
    name: register-center
server:
  port: 8761
eureka:
  client:
    serviceUrl:
      defaultZone: http://${spring.application.name}:${server.port}/eureka/
    # 表示是否注册自身到eureka服务器
    register-with-eureka: true
    # 是否从eureka上获取注册信息
    fetch-registry: false
    # eureka client间隔多久去拉取服务注册信息，默认为30秒
    registry-fetch-interval-seconds: 5
  instance:
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
    lease-expiration-duration-in-seconds: 15
    # 表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance
    lease-renewal-interval-in-seconds: 5
    # 就可以将IP注册到Eureka Server上，而如果不配置就是机器的主机名
    prefer-ip-address: true
    # 服务实例在eureka界面增加显示版本号
    instance-id: ${spring.application.name}:${server.port}
  server:
    # 关闭注册中心的保护机制，Eureka 会统计15分钟之内心跳失败的比例低于85%将会触发保护机制，不剔除服务提供者，如果关闭服务注册中心将不可用的实例正确剔除
    enable-self-preservation: false
   # 清理间隔（单位毫秒，默认是60*1000
    eviction-interval-timer-in-ms: 3000
management:
  endpoints:
    web:
      exposure:
        # 公开所有（已启用）网络端点
        include: "*"
  endpoint:
    health:
      # 何时显示完整的健康详情
      show-details: always
logging:
  level:
    root: info
  file: logs/${spring.application.name}.log